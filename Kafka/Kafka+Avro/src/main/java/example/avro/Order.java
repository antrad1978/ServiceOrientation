/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package example.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 292859887416647039L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"example.avro\",\"fields\":[{\"name\":\"customer\",\"type\":\"string\"},{\"name\":\"date\",\"type\":[\"string\",\"null\"]},{\"name\":\"notes\",\"type\":[\"string\",\"null\"]},{\"name\":\"Items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderItem\",\"fields\":[{\"name\":\"item\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"um\",\"type\":\"string\"},{\"name\":\"qtt\",\"type\":\"int\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Order to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Order from a ByteBuffer. */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence customer;
  @Deprecated public java.lang.CharSequence date;
  @Deprecated public java.lang.CharSequence notes;
  @Deprecated public java.util.List<example.avro.OrderItem> Items;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param customer The new value for customer
   * @param date The new value for date
   * @param notes The new value for notes
   * @param Items The new value for Items
   */
  public Order(java.lang.CharSequence customer, java.lang.CharSequence date, java.lang.CharSequence notes, java.util.List<example.avro.OrderItem> Items) {
    this.customer = customer;
    this.date = date;
    this.notes = notes;
    this.Items = Items;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return customer;
    case 1: return date;
    case 2: return notes;
    case 3: return Items;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: customer = (java.lang.CharSequence)value$; break;
    case 1: date = (java.lang.CharSequence)value$; break;
    case 2: notes = (java.lang.CharSequence)value$; break;
    case 3: Items = (java.util.List<example.avro.OrderItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'customer' field.
   * @return The value of the 'customer' field.
   */
  public java.lang.CharSequence getCustomer() {
    return customer;
  }

  /**
   * Sets the value of the 'customer' field.
   * @param value the value to set.
   */
  public void setCustomer(java.lang.CharSequence value) {
    this.customer = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.CharSequence getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'notes' field.
   * @return The value of the 'notes' field.
   */
  public java.lang.CharSequence getNotes() {
    return notes;
  }

  /**
   * Sets the value of the 'notes' field.
   * @param value the value to set.
   */
  public void setNotes(java.lang.CharSequence value) {
    this.notes = value;
  }

  /**
   * Gets the value of the 'Items' field.
   * @return The value of the 'Items' field.
   */
  public java.util.List<example.avro.OrderItem> getItems() {
    return Items;
  }

  /**
   * Sets the value of the 'Items' field.
   * @param value the value to set.
   */
  public void setItems(java.util.List<example.avro.OrderItem> value) {
    this.Items = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static example.avro.Order.Builder newBuilder() {
    return new example.avro.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static example.avro.Order.Builder newBuilder(example.avro.Order.Builder other) {
    return new example.avro.Order.Builder(other);
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static example.avro.Order.Builder newBuilder(example.avro.Order other) {
    return new example.avro.Order.Builder(other);
  }

  /**
   * RecordBuilder for Order instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    private java.lang.CharSequence customer;
    private java.lang.CharSequence date;
    private java.lang.CharSequence notes;
    private java.util.List<example.avro.OrderItem> Items;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.avro.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.customer)) {
        this.customer = data().deepCopy(fields()[0].schema(), other.customer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.date)) {
        this.date = data().deepCopy(fields()[1].schema(), other.date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.notes)) {
        this.notes = data().deepCopy(fields()[2].schema(), other.notes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Items)) {
        this.Items = data().deepCopy(fields()[3].schema(), other.Items);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(example.avro.Order other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.customer)) {
        this.customer = data().deepCopy(fields()[0].schema(), other.customer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.date)) {
        this.date = data().deepCopy(fields()[1].schema(), other.date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.notes)) {
        this.notes = data().deepCopy(fields()[2].schema(), other.notes);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Items)) {
        this.Items = data().deepCopy(fields()[3].schema(), other.Items);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'customer' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomer() {
      return customer;
    }

    /**
      * Sets the value of the 'customer' field.
      * @param value The value of 'customer'.
      * @return This builder.
      */
    public example.avro.Order.Builder setCustomer(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.customer = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'customer' field has been set.
      * @return True if the 'customer' field has been set, false otherwise.
      */
    public boolean hasCustomer() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'customer' field.
      * @return This builder.
      */
    public example.avro.Order.Builder clearCustomer() {
      customer = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.CharSequence getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public example.avro.Order.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.date = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public example.avro.Order.Builder clearDate() {
      date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'notes' field.
      * @return The value.
      */
    public java.lang.CharSequence getNotes() {
      return notes;
    }

    /**
      * Sets the value of the 'notes' field.
      * @param value The value of 'notes'.
      * @return This builder.
      */
    public example.avro.Order.Builder setNotes(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.notes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'notes' field has been set.
      * @return True if the 'notes' field has been set, false otherwise.
      */
    public boolean hasNotes() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'notes' field.
      * @return This builder.
      */
    public example.avro.Order.Builder clearNotes() {
      notes = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Items' field.
      * @return The value.
      */
    public java.util.List<example.avro.OrderItem> getItems() {
      return Items;
    }

    /**
      * Sets the value of the 'Items' field.
      * @param value The value of 'Items'.
      * @return This builder.
      */
    public example.avro.Order.Builder setItems(java.util.List<example.avro.OrderItem> value) {
      validate(fields()[3], value);
      this.Items = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Items' field has been set.
      * @return True if the 'Items' field has been set, false otherwise.
      */
    public boolean hasItems() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Items' field.
      * @return This builder.
      */
    public example.avro.Order.Builder clearItems() {
      Items = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        record.customer = fieldSetFlags()[0] ? this.customer : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.date = fieldSetFlags()[1] ? this.date : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.notes = fieldSetFlags()[2] ? this.notes : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Items = fieldSetFlags()[3] ? this.Items : (java.util.List<example.avro.OrderItem>) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
