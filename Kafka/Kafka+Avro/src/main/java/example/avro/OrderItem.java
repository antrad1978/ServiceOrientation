/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package example.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5937797872296990154L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderItem\",\"namespace\":\"example.avro\",\"fields\":[{\"name\":\"item\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"um\",\"type\":\"string\"},{\"name\":\"qtt\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderItem> ENCODER =
      new BinaryMessageEncoder<OrderItem>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderItem> DECODER =
      new BinaryMessageDecoder<OrderItem>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<OrderItem> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderItem> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderItem>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderItem to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderItem from a ByteBuffer. */
  public static OrderItem fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence item;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence um;
  @Deprecated public int qtt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderItem() {}

  /**
   * All-args constructor.
   * @param item The new value for item
   * @param description The new value for description
   * @param um The new value for um
   * @param qtt The new value for qtt
   */
  public OrderItem(java.lang.CharSequence item, java.lang.CharSequence description, java.lang.CharSequence um, java.lang.Integer qtt) {
    this.item = item;
    this.description = description;
    this.um = um;
    this.qtt = qtt;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item;
    case 1: return description;
    case 2: return um;
    case 3: return qtt;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item = (java.lang.CharSequence)value$; break;
    case 1: description = (java.lang.CharSequence)value$; break;
    case 2: um = (java.lang.CharSequence)value$; break;
    case 3: qtt = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'item' field.
   * @return The value of the 'item' field.
   */
  public java.lang.CharSequence getItem() {
    return item;
  }

  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(java.lang.CharSequence value) {
    this.item = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'um' field.
   * @return The value of the 'um' field.
   */
  public java.lang.CharSequence getUm() {
    return um;
  }

  /**
   * Sets the value of the 'um' field.
   * @param value the value to set.
   */
  public void setUm(java.lang.CharSequence value) {
    this.um = value;
  }

  /**
   * Gets the value of the 'qtt' field.
   * @return The value of the 'qtt' field.
   */
  public java.lang.Integer getQtt() {
    return qtt;
  }

  /**
   * Sets the value of the 'qtt' field.
   * @param value the value to set.
   */
  public void setQtt(java.lang.Integer value) {
    this.qtt = value;
  }

  /**
   * Creates a new OrderItem RecordBuilder.
   * @return A new OrderItem RecordBuilder
   */
  public static example.avro.OrderItem.Builder newBuilder() {
    return new example.avro.OrderItem.Builder();
  }

  /**
   * Creates a new OrderItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderItem RecordBuilder
   */
  public static example.avro.OrderItem.Builder newBuilder(example.avro.OrderItem.Builder other) {
    return new example.avro.OrderItem.Builder(other);
  }

  /**
   * Creates a new OrderItem RecordBuilder by copying an existing OrderItem instance.
   * @param other The existing instance to copy.
   * @return A new OrderItem RecordBuilder
   */
  public static example.avro.OrderItem.Builder newBuilder(example.avro.OrderItem other) {
    return new example.avro.OrderItem.Builder(other);
  }

  /**
   * RecordBuilder for OrderItem instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderItem>
    implements org.apache.avro.data.RecordBuilder<OrderItem> {

    private java.lang.CharSequence item;
    private java.lang.CharSequence description;
    private java.lang.CharSequence um;
    private int qtt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.avro.OrderItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.um)) {
        this.um = data().deepCopy(fields()[2].schema(), other.um);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.qtt)) {
        this.qtt = data().deepCopy(fields()[3].schema(), other.qtt);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderItem instance
     * @param other The existing instance to copy.
     */
    private Builder(example.avro.OrderItem other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.item)) {
        this.item = data().deepCopy(fields()[0].schema(), other.item);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.um)) {
        this.um = data().deepCopy(fields()[2].schema(), other.um);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.qtt)) {
        this.qtt = data().deepCopy(fields()[3].schema(), other.qtt);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'item' field.
      * @return The value.
      */
    public java.lang.CharSequence getItem() {
      return item;
    }

    /**
      * Sets the value of the 'item' field.
      * @param value The value of 'item'.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder setItem(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.item = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item' field has been set.
      * @return True if the 'item' field has been set, false otherwise.
      */
    public boolean hasItem() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item' field.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder clearItem() {
      item = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'um' field.
      * @return The value.
      */
    public java.lang.CharSequence getUm() {
      return um;
    }

    /**
      * Sets the value of the 'um' field.
      * @param value The value of 'um'.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder setUm(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.um = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'um' field has been set.
      * @return True if the 'um' field has been set, false otherwise.
      */
    public boolean hasUm() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'um' field.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder clearUm() {
      um = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'qtt' field.
      * @return The value.
      */
    public java.lang.Integer getQtt() {
      return qtt;
    }

    /**
      * Sets the value of the 'qtt' field.
      * @param value The value of 'qtt'.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder setQtt(int value) {
      validate(fields()[3], value);
      this.qtt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'qtt' field has been set.
      * @return True if the 'qtt' field has been set, false otherwise.
      */
    public boolean hasQtt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'qtt' field.
      * @return This builder.
      */
    public example.avro.OrderItem.Builder clearQtt() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderItem build() {
      try {
        OrderItem record = new OrderItem();
        record.item = fieldSetFlags()[0] ? this.item : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.um = fieldSetFlags()[2] ? this.um : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.qtt = fieldSetFlags()[3] ? this.qtt : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderItem>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderItem>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderItem>
    READER$ = (org.apache.avro.io.DatumReader<OrderItem>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
